version: '3'
services:
  # NodeJS/ExpressJS server
  express_server:
    container_name: expressjs
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - './:/app'
      - '/app/node_modules'
    ports:
      - 3000:3000
      - 9229:9229
    environment:
      - NODE_ENV=dev
    entrypoint: ["npm", "run", "dev"]

  # Elasticsearch
  eslogs:
    image: elasticsearch:7.8.0
    container_name: eslogs
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elastic/elasticsearch.yaml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node

  # Kibana
  kibana_demo:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kibana_demo
    volumes:
      - ./elastic/kibana.yaml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601

  # Logstash
  logstash_demo:
    image: logstash:7.8.1
    container_name: logstash_demo
    volumes:
      - ./elastic/logging.conf:/usr/share/logstash/pipeline/logging.conf
      - ./elastic/logstash.yaml:/usr/share/logstash/config/logstash.yml
    ports:
      - 1514:1514/udp
      - 1515:1515
      - 1515:1515/udp

  # Postgres
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - api_db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  # Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9090:9090"

  # Prometheus alert manager
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  # Node Exporter
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

volumes:
  elasticsearch_data:
    driver: local
  api_db_data:
    driver: local
  grafana-storage:
