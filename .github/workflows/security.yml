name: Security Pipeline

on:
  push:
    branches: [main]

jobs:
  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  trivy:
    name: Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image for express_server
        run: docker build -f Dockerfile -t express_server:latest .

      - name: Trivy Vulnerability Scan
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: express_server:latest
          format: table
          exit-code: 1
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Telegram Notify on Trivy Fail
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üö® Trivy –æ–±–Ω–∞—Ä—É–∂–∏–ª —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –≤ Docker-–æ–±—Ä–∞–∑–µ express_server!"

  zap:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    services:
      express:
        image: express_server:latest
        ports:
          - 3000:3000
    steps:
      - name: Wait for service
        run: sleep 15

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:3000'
        continue-on-error: true

      - name: Telegram Notify on ZAP Alerts
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ö†Ô∏è OWASP ZAP –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ http://localhost:3000"
  
  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Vault CLI
        run: |
          curl -fsSL https://releases.hashicorp.com/vault/1.13.3/vault_1.13.3_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin

      - name: Load Secrets from Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          BOT_TOKEN=$(vault kv get -field=BOT_TOKEN secret/telegram)
          CHAT_ID=$(vault kv get -field=CHAT_ID secret/telegram)

          echo "BOT_TOKEN=$BOT_TOKEN" >> $GITHUB_ENV
          echo "CHAT_ID=$CHAT_ID" >> $GITHUB_ENV

      - name: Notify via Telegram
        run: |
          curl -s -X POST https://api.telegram.org/bot$BOT_TOKEN/sendMessage \
            -d chat_id=$CHAT_ID \
            -d text="‚úÖ GitHub Actions –ø–æ–ª—É—á–∏–ª —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ Vault —É—Å–ø–µ—à–Ω–æ."
